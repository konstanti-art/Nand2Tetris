// This file is part of www.nand2tetris.org
// and the book "The Elements of Computing Systems"
// by Nisan and Schocken, MIT Press.
// File name: projects/3/a/Register.hdl
/**
 * 16-bit register:
 * If load is asserted, the register's value is set to in;
 * Otherwise, the register maintains its current value:
 * if (load(t)) out(t+1) = int(t), else out(t+1) = out(t)
 */
CHIP Register {
    IN in[16], load;
    OUT out[16];

    PARTS:
    DFF(in=muxOut0, out=aOut0, out=out[0]);
	Mux(a=aOut0, b=in[0], sel=load, out=muxOut0);
    DFF(in=muxOut1, out=aOut1, out=out[1]);
	Mux(a=aOut1, b=in[1], sel=load, out=muxOut1);
    DFF(in=muxOut2, out=aOut2, out=out[2]);
	Mux(a=aOut2, b=in[2], sel=load, out=muxOut2);
    DFF(in=muxOut3, out=aOut3, out=out[3]);
	Mux(a=aOut3, b=in[3], sel=load, out=muxOut3);
    DFF(in=muxOut4, out=aOut4, out=out[4]);
	Mux(a=aOut4, b=in[4], sel=load, out=muxOut4);
    DFF(in=muxOut5, out=aOut5, out=out[5]);
	Mux(a=aOut5, b=in[5], sel=load, out=muxOut5);
    DFF(in=muxOut6, out=aOut6, out=out[6]);
	Mux(a=aOut6, b=in[6], sel=load, out=muxOut6);
    DFF(in=muxOut7, out=aOut7, out=out[7]);
	Mux(a=aOut7, b=in[7], sel=load, out=muxOut7);
    DFF(in=muxOut8, out=aOut8, out=out[8]);
	Mux(a=aOut8, b=in[8], sel=load, out=muxOut8);
    DFF(in=muxOut9, out=aOut9, out=out[9]);
	Mux(a=aOut9, b=in[9], sel=load, out=muxOut9);
    DFF(in=muxOut10, out=aOut10, out=out[10]);
	Mux(a=aOut10, b=in[10], sel=load, out=muxOut10);
    DFF(in=muxOut11, out=aOut11, out=out[11]);
	Mux(a=aOut11, b=in[11], sel=load, out=muxOut11);
    DFF(in=muxOut12, out=aOut12, out=out[12]);
	Mux(a=aOut12, b=in[12], sel=load, out=muxOut12);
    DFF(in=muxOut13, out=aOut13, out=out[13]);
	Mux(a=aOut13, b=in[13], sel=load, out=muxOut13);
    DFF(in=muxOut14, out=aOut14, out=out[14]);
	Mux(a=aOut14, b=in[14], sel=load, out=muxOut14);
    DFF(in=muxOut15, out=aOut15, out=out[15]);
	Mux(a=aOut15, b=in[15], sel=load, out=muxOut15);
}
